<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: fedex.proto

namespace Carrier\Fedex\ShippingChargesPayment;

use UnexpectedValueException;

/**
 * 支付类型
 *
 * Protobuf type <code>fedex.ShippingChargesPayment.PaymentType</code>
 */
class PaymentType
{
    /**
     * Generated from protobuf enum <code>SENDER = 0;</code>
     */
    const SENDER = 0;
    /**
     * Generated from protobuf enum <code>RECIPIENT = 1;</code>
     */
    const RECIPIENT = 1;
    /**
     * Generated from protobuf enum <code>THIRD_PARTY = 2;</code>
     */
    const THIRD_PARTY = 2;
    /**
     * Generated from protobuf enum <code>COLLECT = 3;</code>
     */
    const COLLECT = 3;

    private static $valueToName = [
        self::SENDER => 'SENDER',
        self::RECIPIENT => 'RECIPIENT',
        self::THIRD_PARTY => 'THIRD_PARTY',
        self::COLLECT => 'COLLECT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(PaymentType::class, \Carrier\Fedex\ShippingChargesPayment_PaymentType::class);

