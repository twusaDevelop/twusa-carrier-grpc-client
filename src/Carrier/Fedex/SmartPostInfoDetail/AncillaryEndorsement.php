<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: fedex.proto

namespace Carrier\Fedex\SmartPostInfoDetail;

use UnexpectedValueException;

/**
 * 附属背书的类型
 *
 * Protobuf type <code>fedex.SmartPostInfoDetail.AncillaryEndorsement</code>
 */
class AncillaryEndorsement
{
    /**
     * Generated from protobuf enum <code>ADDRESS_CORRECTION = 0;</code>
     */
    const ADDRESS_CORRECTION = 0;
    /**
     * Generated from protobuf enum <code>CARRIER_LEAVE_IF_NO_RESPONSE = 1;</code>
     */
    const CARRIER_LEAVE_IF_NO_RESPONSE = 1;
    /**
     * Generated from protobuf enum <code>CHANGE_SERVICE = 2;</code>
     */
    const CHANGE_SERVICE = 2;
    /**
     * Generated from protobuf enum <code>FORWARDING_SERVICE = 3;</code>
     */
    const FORWARDING_SERVICE = 3;
    /**
     * Generated from protobuf enum <code>RETURN_SERVICE = 4;</code>
     */
    const RETURN_SERVICE = 4;

    private static $valueToName = [
        self::ADDRESS_CORRECTION => 'ADDRESS_CORRECTION',
        self::CARRIER_LEAVE_IF_NO_RESPONSE => 'CARRIER_LEAVE_IF_NO_RESPONSE',
        self::CHANGE_SERVICE => 'CHANGE_SERVICE',
        self::FORWARDING_SERVICE => 'FORWARDING_SERVICE',
        self::RETURN_SERVICE => 'RETURN_SERVICE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(AncillaryEndorsement::class, \Carrier\Fedex\SmartPostInfoDetail_AncillaryEndorsement::class);

