<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: fedex.proto

namespace Carrier\Fedex\RequestedShipment;

use UnexpectedValueException;

/**
 * 服务类型枚举
 *
 * Protobuf type <code>fedex.RequestedShipment.ServiceType</code>
 */
class ServiceType
{
    /**
     * Generated from protobuf enum <code>FEDEX_GROUND = 0;</code>
     */
    const FEDEX_GROUND = 0;
    /**
     * Generated from protobuf enum <code>GROUND_HOME_DELIVERY = 1;</code>
     */
    const GROUND_HOME_DELIVERY = 1;
    /**
     * Generated from protobuf enum <code>SMART_POST = 2;</code>
     */
    const SMART_POST = 2;
    /**
     * Generated from protobuf enum <code>FEDEX_1_DAY_FREIGHT = 3;</code>
     */
    const FEDEX_1_DAY_FREIGHT = 3;
    /**
     * Generated from protobuf enum <code>FEDEX_2_DAY_FREIGHT = 4;</code>
     */
    const FEDEX_2_DAY_FREIGHT = 4;

    private static $valueToName = [
        self::FEDEX_GROUND => 'FEDEX_GROUND',
        self::GROUND_HOME_DELIVERY => 'GROUND_HOME_DELIVERY',
        self::SMART_POST => 'SMART_POST',
        self::FEDEX_1_DAY_FREIGHT => 'FEDEX_1_DAY_FREIGHT',
        self::FEDEX_2_DAY_FREIGHT => 'FEDEX_2_DAY_FREIGHT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(ServiceType::class, \Carrier\Fedex\RequestedShipment_ServiceType::class);

