<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ups.proto

namespace Carrier\Ups\Shipment;

use UnexpectedValueException;

/**
 * Protobuf type <code>ups.Shipment.Service</code>
 */
class Service
{
    /**
     * Generated from protobuf enum <code>GROUND = 0;</code>
     */
    const GROUND = 0;
    /**
     * Generated from protobuf enum <code>SURE_POST = 1;</code>
     */
    const SURE_POST = 1;
    /**
     * Generated from protobuf enum <code>NEXT_DAY_AIR = 2;</code>
     */
    const NEXT_DAY_AIR = 2;
    /**
     * 2nd Day Air
     *
     * Generated from protobuf enum <code>SND_DAY_AIR = 3;</code>
     */
    const SND_DAY_AIR = 3;

    private static $valueToName = [
        self::GROUND => 'GROUND',
        self::SURE_POST => 'SURE_POST',
        self::NEXT_DAY_AIR => 'NEXT_DAY_AIR',
        self::SND_DAY_AIR => 'SND_DAY_AIR',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Service::class, \Carrier\Ups\Shipment_Service::class);

