<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rocket.proto

namespace Carrier\Rocket\CarrierAction;

use UnexpectedValueException;

/**
 * Protobuf type <code>rocket.CarrierAction.Carrier</code>
 */
class Carrier
{
    /**
     * Generated from protobuf enum <code>STAMPS = 0;</code>
     */
    const STAMPS = 0;
    /**
     * Generated from protobuf enum <code>DHL = 1;</code>
     */
    const DHL = 1;
    /**
     * Generated from protobuf enum <code>FEDEX = 2;</code>
     */
    const FEDEX = 2;
    /**
     * Generated from protobuf enum <code>UPS = 3;</code>
     */
    const UPS = 3;
    /**
     * Generated from protobuf enum <code>USPS = 4;</code>
     */
    const USPS = 4;

    private static $valueToName = [
        self::STAMPS => 'STAMPS',
        self::DHL => 'DHL',
        self::FEDEX => 'FEDEX',
        self::UPS => 'UPS',
        self::USPS => 'USPS',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(Carrier::class, \Carrier\Rocket\CarrierAction_Carrier::class);

