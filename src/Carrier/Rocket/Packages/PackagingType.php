<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rocket.proto

namespace Carrier\Rocket\Packages;

use UnexpectedValueException;

/**
 * 打包方式枚举
 *
 * Protobuf type <code>rocket.Packages.PackagingType</code>
 */
class PackagingType
{
    /**
     * Stamps
     *
     * Generated from protobuf enum <code>LETTER = 0;</code>
     */
    const LETTER = 0;
    /**
     * Generated from protobuf enum <code>LARGE_ENVELOPE_OR_FLAT = 1;</code>
     */
    const LARGE_ENVELOPE_OR_FLAT = 1;
    /**
     * Generated from protobuf enum <code>THICK_ENVELOPE = 2;</code>
     */
    const THICK_ENVELOPE = 2;
    /**
     * Generated from protobuf enum <code>FLAT_RATE_PADDED_ENVELOPE = 3;</code>
     */
    const FLAT_RATE_PADDED_ENVELOPE = 3;
    /**
     * Generated from protobuf enum <code>PACKAGE = 4;</code>
     */
    const PACKAGE = 4;
    /**
     * Generated from protobuf enum <code>FLAT_RATE_BOX = 5;</code>
     */
    const FLAT_RATE_BOX = 5;
    /**
     * Generated from protobuf enum <code>SMALL_FLAT_RATE_BOX = 6;</code>
     */
    const SMALL_FLAT_RATE_BOX = 6;
    /**
     * Generated from protobuf enum <code>LARGE_FLAT_RATE_BOX = 7;</code>
     */
    const LARGE_FLAT_RATE_BOX = 7;
    /**
     * Generated from protobuf enum <code>FLAT_RATE_ENVELOPE = 8;</code>
     */
    const FLAT_RATE_ENVELOPE = 8;
    /**
     * Generated from protobuf enum <code>LARGE_PACKAGE = 9;</code>
     */
    const LARGE_PACKAGE = 9;
    /**
     * Generated from protobuf enum <code>OVERSIZED_PACKAGE = 10;</code>
     */
    const OVERSIZED_PACKAGE = 10;
    /**
     * Generated from protobuf enum <code>REGIONAL_RATE_BOX_A = 11;</code>
     */
    const REGIONAL_RATE_BOX_A = 11;
    /**
     * Generated from protobuf enum <code>REGIONAL_RATE_BOX_B = 12;</code>
     */
    const REGIONAL_RATE_BOX_B = 12;
    /**
     * Generated from protobuf enum <code>REGIONAL_RATE_BOX_C = 13;</code>
     */
    const REGIONAL_RATE_BOX_C = 13;

    private static $valueToName = [
        self::LETTER => 'LETTER',
        self::LARGE_ENVELOPE_OR_FLAT => 'LARGE_ENVELOPE_OR_FLAT',
        self::THICK_ENVELOPE => 'THICK_ENVELOPE',
        self::FLAT_RATE_PADDED_ENVELOPE => 'FLAT_RATE_PADDED_ENVELOPE',
        self::PACKAGE => 'PACKAGE',
        self::FLAT_RATE_BOX => 'FLAT_RATE_BOX',
        self::SMALL_FLAT_RATE_BOX => 'SMALL_FLAT_RATE_BOX',
        self::LARGE_FLAT_RATE_BOX => 'LARGE_FLAT_RATE_BOX',
        self::FLAT_RATE_ENVELOPE => 'FLAT_RATE_ENVELOPE',
        self::LARGE_PACKAGE => 'LARGE_PACKAGE',
        self::OVERSIZED_PACKAGE => 'OVERSIZED_PACKAGE',
        self::REGIONAL_RATE_BOX_A => 'REGIONAL_RATE_BOX_A',
        self::REGIONAL_RATE_BOX_B => 'REGIONAL_RATE_BOX_B',
        self::REGIONAL_RATE_BOX_C => 'REGIONAL_RATE_BOX_C',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

// Adding a class alias for backwards compatibility with the previous class name.
class_alias(PackagingType::class, \Carrier\Rocket\Packages_PackagingType::class);

